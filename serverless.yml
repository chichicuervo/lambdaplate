service: lambda-boilerplate # NOTE: update this with your service name

plugins:
    - serverless-dotenv-plugin
    - serverless-scriptable-plugin
    - aws-amplify-serverless-plugin
    - serverless-s3-sync
    - serverless-webpack
    - serverless-offline
    - serverless-iam-roles-per-function

provider:
    name: aws
    runtime: nodejs12.x
    stage: ${opt:stage, 'dev'}
    region: ${opt:region, 'us-west-2'}
    profile: ${self:custom.profiles.${self:provider.stage}, 'default'}
    environment:
        API_PREFIX: ${self:custom.apiPrefix}

# package:
    # individually: true

custom:
    devParams: ${file(config/dev.config.json)}

    serverless-offline:
        host: ${self:custom.devParams.dev_host, "0.0.0.0"}
        httpPort: ${self:custom.devParams.dev_port, "3000"}
        noPrependStageInUrl: true
        resourceRoutes:
            StaticFilesProxyMethod:
                Uri: "http://${self:custom.devParams.proxy_host}:${self:custom.devParams.proxy_port}/{file}"

    webpack:
        webpackConfig: config/server.webpack.js
        includeModules:
            forceExclude:
                - aws-sdk

    apiPrefix: api

    s3Sync:
        -   bucketNameKey: StaticFilesBucketOutputKey
            localDir: dist

    scriptHooks:
        before:deploy:deploy:
            - npm run build:client

functions:
    hello:
        handler: src/lambda/hello.default
        events:
            - http:
                method: GET
                path: /${self:custom.apiPrefix}/hello
                cors: true

resources:
    - Resources:
    - ${file(config/resources/static-files.yml)}
    - ${file(config/resources/static-proxy.yml)}
    - ${file(config/resources/cognito-auth.yml)}
    - ${file(config/resources/cloudfront.yml)}
